AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Serverless Account Page

Parameters:
  ApplicationName:
    Type: String
    Default: 'ServerlessAccountPage'
  ImgTableName:
    Type: String
    Default: 'sample_img'
    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'
  FrontPageApiStageName:
    Type: String
    Default: 'ProdStage'

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        UnusedAccountValidityDays: 7
      AutoVerifiedAttributes:
        - email
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
  UserPoolAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: mobile_app
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH
      GenerateSecret: false
      UserPoolId: !Ref UserPool
  FrontPageApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: ServerlessAccountPageApi
      EndpointConfiguration: REGIONAL
      StageName: !Ref FrontPageApiStageName
  UserImgBucket:
    Type: AWS::S3::Bucket
  FrontPageFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
      - arm64
      FunctionName: ServerlessAccountPageFrontFunction
      CodeUri: bin/
      Handler: bootstrap
      MemorySize: 256
      Runtime: provided.al2
      Description: 'Test Front Function'
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ImgTableName
      Environment:
        Variables:
          IMG_TABLE_NAME: !Ref ImgTableName
          BUCKET_NAME: !Ref 'UserImgBucket'
          REGION: !Ref 'AWS::Region'
          API_PATH: !Join [ '', [ '/', !Ref FrontPageApiStageName, '/api'] ]
      Events:
        FrontPageApi:
          Type: Api
          Properties:
            Path: '/'
            Method: get
            RestApiId: !Ref FrontPageApi
  MainFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
      - arm64
      FunctionName: ServerlessAccountPageApiFunction
      CodeUri: api/bin/
      Handler: bootstrap
      MemorySize: 256
      Runtime: provided.al2
      Description: 'Test Img Function'
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ImgTableName
      - S3CrudPolicy:
          BucketName: !Ref UserImgBucket
      - Statement:
        - Sid: UserPoolControlPolicy
          Effect: Allow
          Action:
          - cognito-idp:InitiateAuth
          - cognito-idp:GetUser
          - cognito-idp:ChangePassword
          - cognito-idp:GlobalSignOut
          - cognito-idp:SignUp
          - cognito-idp:ConfirmSignUp
          Resource: !Sub
          - 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}'
          - { UserPoolId: !Ref UserPool}
      Environment:
        Variables:
          IMG_TABLE_NAME: !Ref ImgTableName
          BUCKET_NAME: !Ref 'UserImgBucket'
          REGION: !Ref 'AWS::Region'
          CLIENT_ID: !Ref UserPoolAppClient
      Events:
        FrontPageApi:
          Type: Api
          Properties:
            Path: '/api'
            Method: post
            RestApiId: !Ref FrontPageApi
  ImgTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "img_id"
        AttributeType: "N"
      KeySchema:
      - AttributeName: "img_id"
        KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3
      SSESpecification:
        SSEEnabled: False
      TableName: !Ref ImgTableName

Outputs:
  APIURI:
    Description: "URI"
    Value: !Join [ '', [ 'https://', !Ref FrontPageApi, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref FrontPageApiStageName,'/'] ]
